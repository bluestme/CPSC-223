Assignment 5: Quadtree

Objectives
to implement a variant of binary search trees

Imagine an invasive species tracking app that allows users to submit the geographic coordinates of the locations of invasive species. Monitoring organizations could then receive alerts when species they are tracking show up in new locations. But when invasive species are present in frequently-visited locations, there will be many reports around those locations, so the alert-generating system should have some way of filtering reports that are near other reports. To do so efficiently, it could make use of a data structure that allows for efficient nearest neighbor queries. When a new report comes in, the app would then query the data structure for the nearest neighbor to the new point among all other points previously recorded. If the distance to the nearest neighbor is above a certain threshold, then the location could be considered a "new" location for the invasive species, and resources could be sent to that new location to attempt to eradicate the invaders.

A quadtree is a data structure that allows for efficient nearest neighbor queries in 2 dimensions. A quadtree is a tree in which each node contains a point and has up to four children. In a binary search tree, all the values in a node's left subtree are less than the value in the node, and all the values in the right subtree are greater. But comparing both coordinates of two distinct 2-D points (x1,y1) and (x2,y2) yields four possible results: x2≤x1 and y2≥y1; x2≤x1 and y2<y1; x2>x1 and y2≥y1, or x2>x1 and y2<y1. Those four results correspond to the children of a node in a quadtree: a node's northwest child is the root of a quadtree containing points that have smaller x-coordinates and larger (or equal) y-coordinates; the southwest child is the root of a subtree that contains points with smaller x- and y-coordinates, and similarly for the southeast child and northeast child. Searching for a point and adding a point to a quadtree are then like searching and adding in a binary search tree, except you must determine which of four branches to follow after each comparison.

Details of the project: https://zoo.cs.yale.edu/classes/cs223/f2021/Assignments/quadtree.html
